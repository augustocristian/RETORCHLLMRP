{%- set test_scenarios = [
    {
        "scenario": "Test Scenario 1: Chat Session between student and teacher",
        "test": "oneToOneChatInSessionChrome",
        "description": "This test involves logging in as both a teacher and a student. Both users navigate to the sessions tab and enter the same class. They verify that the 'Student/Teacher is connected' message appears on both sides. The teacher sends a message to the student, who then responds. Both users confirm that the messages appear correctly on their respective interfaces. Finally, they log out to conclude the chat session."
    },
    {
        "scenario": "Test Scenario 2: Create a course and edit its title",
        "test": "courseRestOperations",
        "description": "The teacher logs in and creates a new course. He enter the course editor, modify its name, and verify that the changes were successfully applied. Afterward, the teacher deletes the created course and logs out."
    },
    {
        "scenario": "Test Scenario 3: Edit the information of a course",
        "test": "courseInfoRestOperations",
        "description": "The teacher logs in, creates a new course, enters the course editor, and updates its content/information. After verifying that the edits were successful, the teacher deletes the created course and logs out."
    },
    {
        "scenario": "Test Scenario 4: Create and edit a session",
        "test": "sessionRestOperations",
        "description": "The teacher logs in, creates a new course, and navigates to the course to create a new session. Within the session, the teacher edits the name, comments, and date, ensuring that the changes are correctly applied. Finally, the teacher deletes the course (including the session) and logs out."
    },
    {
        "scenario": "Test Scenario 5: Add and edit an entry to the forum",
        "test": "forumRestOperations",
        "description": "The teacher logs in and creates a new course. They access the course forum and create a new entry, modifying its title, content, and date. After ensuring the entry is successfully published with the correct authorship, the teacher navigates to the entry and adds a reply, confirming that the reply is displayed correctly. Next, the teacher deactivates the forum to verify their ability to do so. Finally, the teacher deletes the course and logs out."
    },
    {
        "scenario": "Test Scenario 6: Add and edit files into a course",
        "test": "filesRestOperations",
        "description": "The teacher logs in and creates a new course. They navigate to the course files tab and upload a new file, organizing it into a file group with a specified title. The teacher verifies that both the file and the group were successfully created and uploaded. Next, the teacher attempts to edit the group and confirms that the changes were applied successfully. Then, they create a nested subgroup within the previously created group and upload another file, ensuring that the file is correctly uploaded.The teacher proceeds to edit the uploaded file, modifying its title and changing the attached file, and verifies that the changes are applied correctly. Finally, the teacher deletes the created course and logs out."
    },
    {
        "scenario": "Test Scenario 7: Add and edit attenders",
        "test": "attendersRestOperations",
        "description": "The teacher logs in and creates a new course. They navigate to the course attenders tab and verify that they are the only attendee initially. The teacher attempts to add an incorrect attendee, ensuring that the attempt fails. Subsequently, they add a correct student and verify that the student is successfully added.Next, the teacher removes the student and checks that the number of attendees returns to its original value. Finally, the teacher deletes the course and logs out."
    },
    {
        "scenario": "Test Scenario 8: Video session with several students and teacher",
        "test": "sessionTest",
        "description": "The teacher logs in and creates a new session within an existing course. They join the session and verify that the correct 'connected' message appears. Several students log in and join the session, ensuring that the video functionality works and that all students see the 'connected' message.After all students leave the session, the teacher also leaves. Finally, the teacher removes the created session."
    },
    {
        "scenario": "Test Scenario 9: One to One Video session",
        "test": "oneToOneVideoAudioSessionChrome",
        "description": "The teacher logs in and creates a new session within an already created course. They join the session and verify that the correct 'connected' message appears. A single student logs in and joins the same session. The student requests intervention, which the teacher accepts. Both users verify the video functionality.Next, the teacher cancels the student's intervention and confirms that only one video feed remains available. Finally, both the teacher and the student log out."
    },
    {
        "scenario": "Test Scenario 10: Student course navigation",
        "test": "studentCourseMainTest",
        "description": "The student logs into the application and navigates to the course homepage. They enter the first course and verify the ability to navigate between different tabs such as Home, Sessions, Forum, Files, and Attenders. Finally, the student logs out."
    },
    {
        "scenario": "Test Scenario 11: Teacher course navigation",
        "test": "teacherCourseMainTest",
        "description": "The teacher logs into the application and navigates to the course homepage. They enter the first course and verify the ability to navigate between different tabs including Home, Sessions, Forum, Files, and Attenders. Finally, the teacher logs out."
    },
    {
        "scenario": "Test Scenario 12: Teacher delete course functionality",
        "test": "teacherCreateAndDeleteCourseTest",
        "description": "The teacher logs into the application and navigates to the course homepage. They create a new course, specifying the date, and verify that all details correspond to the created course. Afterward, the teacher deletes the course and confirms that it is successfully removed. Finally, the teacher logs out."
    },
    {
        "scenario": "Test Scenario 13: Teacher edit course values",
        "test": "teacherEditCourseValues",
        "description": "The teacher logs into the application and navigates to the course homepage. They create a new course with a specified date and verify that all details match the created course. The teacher then edits the course starting with the description, ensuring that changes are displayed correctly. Next, the teacher reverts the description to its original value. Subsequently, they modify the title, subheading, and content using different styles, confirming that the course's appearance meets expectations. The teacher proceeds to check the status of the forum, ensuring it behaves as expected: if disabled, ensuring it cannot be used; if enabled, verifying that comments and entries are visible. Finally, the teacher checks the attenders list to confirm that the current user is highlighted and that the number of attenders matches expectations. They then log out."
    },
    {
        "scenario": "Test Scenario 14: Teacher delete course",
        "test": "teacherDeleteCourseTest",
        "description": "The teacher logs into the application, navigates to the course homepage, creates a new course, deletes it, and then logs out."
    },
    {
        "scenario": "Test Scenario 15: Teacher and student are able to load the forum entries",
        "test": "forumLoadEntriesTest",
        "description": "The user logs into the application and navigates to the course homepage, entering a previously created course. They verify that the forum is enabled and inspect the content of the first entry. Finally, the user logs out and exits the application."
    },
    {
        "scenario": "Test Scenario 16: Teacher and student create entry at certain hour-time",
        "test": "forumNewEntryTest",
        "description": "The user logs into the application and navigates to the course homepage, entering a previously created course. They access the forum, locate the first entry, and attempt to comment on it. The user verifies that the entry and comments display the correct date and time of creation as well as its content. Finally, the user logs out and exits the application."
    },
    {
        "scenario": "Test Scenario 17: Teacher and student create comments at certain hour-time",
        "test": "forumNewCommentTest",
        "description": "The user logs into the application and navigates to the course homepage, entering a previously created course. They access the forum, create a comment with a timestamp, and verify that the comment's title, content, and timestamp appear correctly in the comment list, matching the created ones."
    },
    {
        "scenario": "Test Scenario 18: Teacher and student reply to comments at certain hour-time",
        "test": "forumNewReply2CommentTest",
        "description": "The user logs into the application and navigates to the course homepage, entering a previously created course. They access the forum and reply to an existing comment with the current timestamp. The user verifies that the reply appears correctly in the comment list and confirms that its content matches the expected reply."
    },
    {
        "scenario": "Test Scenario 19: Logged user URL navigation test",
        "test": "spiderLoggedTest",
        "description": "For a logged user, checks that all the URLs return status OK"
    },
    {
        "scenario": "Test Scenario 20: Unlogged user URL navigation test",
        "test": "spiderUnLoggedTest",
        "description": "For an unlogged user, checks that all the URLs return status KO (its not able to access anything in the application)"
    },
    {
        "scenario": "Test Scenario 21: The user is able to login",
        "test": "loginTest",
        "description": "For a student and teacher check that is able to log-in in the application."
    }
] %}

{% for scenario in test_scenarios %}
    Scenario: {{ scenario.scenario }}
    Test: {{ scenario.test }}
    Description: {{ scenario.description }}
{% endfor %}

